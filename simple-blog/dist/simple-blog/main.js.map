{"version":3,"sources":["./src/app/posts/posts.module.ts","./src/environments/environment.ts","./src/app/posts/post-item/post-item.component.ts","./src/app/posts/blog/blog.component.ts","./src/app/posts/post-detail/post-detail.component.ts","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {BlogComponent} from \"./blog/blog.component\";\nimport {PostItemComponent} from \"./post-item/post-item.component\";\nimport {MatToolbarModule} from \"@angular/material/toolbar\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport { PostDetailComponent } from './post-detail/post-detail.component';\nimport {RouterModule} from \"@angular/router\";\n\n\n\n@NgModule({\n  declarations: [\n      BlogComponent,\n      PostItemComponent,\n      PostDetailComponent\n  ],\n  imports: [\n    CommonModule,\n    MatToolbarModule,\n    MatCardModule,\n    MatButtonModule,\n      RouterModule\n  ],\n  exports: [\n      BlogComponent\n  ]\n})\nexport class PostsModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Post} from \"../../app.component\";\n\n@Component({\n  selector: 'app-post-item',\n  template: `\n    <mat-card [id]=\"post.id\" *ngIf=\"post\">\n      <img [src]=\"imgLink\" alt=\"\">\n      <mat-card-title> {{ post.title }} </mat-card-title>\n      <mat-card-content>\n        <p> {{ post.body}} </p>\n      </mat-card-content>\n      <button mat-button >read more</button>\n    </mat-card>\n  `,\n  styles: [\n      ':host { display: block }',\n      'img {width: 100%;}'\n  ]\n})\nexport class PostItemComponent implements OnInit {\n\n  @Input() post: Post | undefined;\n  imgLink:string = 'https://picsum.photos/1000/500';\n\n  ngOnInit(): void {}\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {Post} from \"../../app.component\";\n\n@Component({\n  selector: 'app-blog',\n  template: `      \n    <div class=\"grid-continer\">\n       <mat-card *ngFor=\"let post of posts\" [id]=\"post.id\">\n            <img [src]=\"imgLink\" alt=\"\">\n            <mat-card-title> {{ post.title }} </mat-card-title>\n            <mat-card-content>\n              <p> {{ post.body}} </p>s\n            </mat-card-content>\n            <button mat-button [routerLink]=\"['post', post.id ]\">read more</button>\n       </mat-card>\n    </div>\n  `,\n  styleUrls: ['./blog.component.scss']\n})\nexport class BlogComponent implements OnInit {\n\n  imgLink:string = 'https://picsum.photos/600/300';\n\n  posts: Post[] = [\n    {\n      id:1,\n      title: \"Lorem ipsum\",\n      postImg: 'https://picsum.photos/200',\n      body: \"High quality Internationalized and accessible components for everyone. Well tested to ensure performance and reliability. Straightforward APIs with consistent cross platform behaviour. Versatile Provide tools that help developers build their own custom components with common interaction patterns. Customizable within the bounds of the Material Design specification. Frictionless Built by the Angular team to integrate seamlessly with Angular. Start from scratch or drop into your existing applications.\"\n    },\n    {\n      id:2,\n      title: \"Lorem ipsum\",\n      body: \"High quality Internationalized and accessible components for everyone. Well tested to ensure performance and reliability. Straightforward APIs with consistent cross platform behaviour. Versatile Provide tools that help developers build their own custom components with common interaction patterns. Customizable within the bounds of the Material Design specification. Frictionless Built by the Angular team to integrate seamlessly with Angular. Start from scratch or drop into your existing applications.\"\n    },\n    {\n      id:3,\n      title: \"Lorem ipsum\",\n      body: \"High quality Internationalized and accessible components for everyone. Well tested to ensure performance and reliability. Straightforward APIs with consistent cross platform behaviour. Versatile Provide tools that help developers build their own custom components with common interaction patterns. Customizable within the bounds of the Material Design specification. Frictionless Built by the Angular team to integrate seamlessly with Angular. Start from scratch or drop into your existing applications.\"\n    },\n    {\n      id:4,\n      title: \"Lorem ipsum\",\n      body: \"High quality Internationalized and accessible components for everyone. Well tested to ensure performance and reliability. Straightforward APIs with consistent cross platform behaviour. Versatile Provide tools that help developers build their own custom components with common interaction patterns. Customizable within the bounds of the Material Design specification. Frictionless Built by the Angular team to integrate seamlessly with Angular. Start from scratch or drop into your existing applications.\"\n    },\n    {\n      id:5,\n      title: \"Lorem ipsum\",\n      body: \"High quality Internationalized and accessible components for everyone. Well tested to ensure performance and reliability. Straightforward APIs with consistent cross platform behaviour. Versatile Provide tools that help developers build their own custom components with common interaction patterns. Customizable within the bounds of the Material Design specification. Frictionless Built by the Angular team to integrate seamlessly with Angular. Start from scratch or drop into your existing applications.\"\n    },\n    {\n      id:6,\n      title: \"Lorem ipsum\",\n      body: \"High quality Internationalized and accessible components for everyone. Well tested to ensure performance and reliability. Straightforward APIs with consistent cross platform behaviour. Versatile Provide tools that help developers build their own custom components with common interaction patterns. Customizable within the bounds of the Material Design specification. Frictionless Built by the Angular team to integrate seamlessly with Angular. Start from scratch or drop into your existing applications.\"\n    }\n  ]\n\n  ngOnInit(): void {\n    console.log(\"posts arra\", this.posts);\n  }\n\n}\n","import {Component, OnInit} from '@angular/core';\nimport {ActivatedRoute, Params} from \"@angular/router\";\n\n@Component({\n  selector: 'app-post-detail',\n  template: `\n    <p>\n      post-detail works!\n    </p>\n  `,\n  styles: []\n})\nexport class PostDetailComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute) {\n  }\n\n  ngOnInit(): void {\n    this.route.params.subscribe((params: Params) => {\n      console.log(\"params\", params);\n    });\n  }\n\n}\n","import { Component } from '@angular/core';\n\nexport interface Post {\n  id: number,\n  title: string,\n  body: string,\n  postImg?: string\n}\n\n\n\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <app-header></app-header>\n    <router-outlet>\n      <!-- routenak meglfeleő comp -->\n    </router-outlet>\n  `,\n  styles: []\n})\nexport class AppComponent {\n  title = 'simple-blog';\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {PostsModule} from \"./posts/posts.module\";\nimport {AppRoutingModule} from \"./app-routing.module\";\nimport {RouterModule} from \"@angular/router\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n      RouterModule,\n    AppRoutingModule,\n    PostsModule,\n    MatToolbarModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  template: `\n    <mat-toolbar [color]=\"'primary'\">\n      <span>Simple blog</span>\n    </mat-toolbar>\n  `,\n  styleUrls: ['header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from \"@angular/router\";\nimport {BlogComponent} from \"./posts/blog/blog.component\";\nimport {PostDetailComponent} from \"./posts/post-detail/post-detail.component\";\n\nconst mainRoutes: Routes = [\n  { path: \"\", component: BlogComponent},\n  { path: \"post\", component: PostDetailComponent},\n  { path: \"post/:id\", component: PostDetailComponent},\n]\n\n@NgModule({\n  imports: [\n      RouterModule.forRoot(mainRoutes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}